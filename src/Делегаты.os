// Создает объект Делегат для выполнения указанного метода объекта
//
// Параметры:
//   Объект - <Строка> - Программный объект, метод которого будет вызван
//   ИмяМетода - <Строка> - Имя метода (процедура/функция), который будет вызван
//   Параметры - <Произвольный>, <Массив/ФиксированныйМассив>  (необязательный) - Параметры для передачи в метод при его вызове
//		Если передан Массив/ФиксированныйМассив, тогда все элементы массива передаются как отдельные параметры вызываемого метода
//		Рекомендуется использовать создание массива параметров через Делегаты.МассивПараметров при использовании нескольких параметров
//		также параметры можно передать позже, через непосредственном вызове метода "Исполнить"
//
//  Возвращаемое значение:
//   <Делегат> - созданный объект Делега
//
Функция Создать(Объект, ИмяМетода, Параметры = Неопределено) Экспорт
	
	Делегат = Новый Делегат(Объект, ИмяМетода, Параметры);
	
	Возврат Делегат;
	
КонецФункции

// Выполняет Делегат, т.е. вызываем соответствующий метод объекта с заданными параметрами
//
// Параметры:
//   Делегат - <Делегат> - Подготовленный для вызова делегат
//   НовыеПараметры - <Произвольный>, <Массив/ФиксированныйМассив>  (необязательный) - Параметры для передачи в вызываемый метод
//		Если передан Массив/ФиксированныйМассив, тогда все элементы массива передаются как отдельные параметры вызываемого метода
//		Рекомендуется использовать создание массива параметров через Делегаты.МассивПараметров при использовании нескольких параметров
//		Если Неопределено, тогда используются параметры, указанные при создании Делегата
//
//  Возвращаемое значение:
//   <Произвольный> - возвращаемое значение вызываемого метода, если тот является функцией,
//		или Неопределено, если метод является процедурой
//
Функция Исполнить(Делегат, НовыеПараметры = Неопределено) Экспорт
	
	Возврат Делегат.Исполнить(НовыеПараметры);
	
КонецФункции

// Создает массив параметров из произвольных значений для передачи в Делегат
// Неопределенные параметры в конце списка пропускаются
//
// Параметры:
//   П1 - <Произвольный>, Неопределено (необязательный) - очередной параметр
//   П2 - <Произвольный>, Неопределено (необязательный) - очередной параметр
//   П3 - <Произвольный>, Неопределено (необязательный) - очередной параметр
//   П4 - <Произвольный>, Неопределено (необязательный) - очередной параметр
//   П5 - <Произвольный>, Неопределено (необязательный) - очередной параметр
//   П6 - <Произвольный>, Неопределено (необязательный) - очередной параметр
//   П7 - <Произвольный>, Неопределено (необязательный) - очередной параметр
//   П8 - <Произвольный>, Неопределено (необязательный) - очередной параметр
//   П9 - <Произвольный>, Неопределено (необязательный) - очередной параметр
//
//  Возвращаемое значение:
//   <Массив> - полученный массив параметров
//
Функция МассивПараметров(П1 = Неопределено, П2 = Неопределено, П3 = Неопределено, П4 = Неопределено,
	П5 = Неопределено, П6 = Неопределено, П7 = Неопределено, П8 = Неопределено, П9 = Неопределено) Экспорт
	
	Рез = Новый Массив;
	Рез.Добавить(П1);
	Рез.Добавить(П2);
	Рез.Добавить(П3);
	Рез.Добавить(П4);
	Рез.Добавить(П5);
	Рез.Добавить(П6);
	Рез.Добавить(П7);
	Рез.Добавить(П8);
	Рез.Добавить(П9);
	
	Для кк=-Рез.ВГраница() По 0 Цикл
		Если Рез[-кк] = Неопределено Тогда
			Рез.Удалить(-кк);
		Иначе
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Рез;
КонецФункции

// Получить имя лога продукта
//
// Возвращаемое значение:
//  Строка   - имя лога продукта
//
Функция ИмяЛога() Экспорт
	Возврат "oscript.lib.delegate";
КонецФункции
