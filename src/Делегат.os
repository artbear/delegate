#Использовать logos

Перем Объект;
Перем ИмяМетода;
Перем Параметры;
Перем Лог;

// Создает объект Делегат для выполнения указанного метода объекта
//
// Параметры:
//   ПарамОбъект - Произвольный - Программный объект, метод которого будет вызван
//   ПарамИмяМетода - Строка - Имя метода (процедура/функция), который будет вызван
//   НовыеПараметры - Произвольный, Массив, ФиксированныйМассив - (необязательный) Параметры для передачи в метод при его вызове
//		Если передан Массив/ФиксированныйМассив, тогда все элементы массива передаются как отдельные параметры вызываемого метода
//		Рекомендуется использовать создание массива параметров через Делегаты.МассивПараметров при использовании нескольких параметров
//		также параметры можно передать позже, через непосредственном вызове метода "Исполнить"
//
Процедура ПриСозданииОбъекта(ПарамОбъект, ПарамИмяМетода, НовыеПараметры = Неопределено)
    Лог = Логирование.ПолучитьЛог(Делегаты.ИмяЛога());

	Объект = ПарамОбъект;
	ИмяМетода = ПарамИмяМетода;
	Параметры = НовыеПараметры;

	Лог.Отладка("Создаем Делегат. Имя метода %1, Тип объекта %2", ИмяМетода, ТипЗнч(Объект));
	ТипПараметра = ТипЗнч(Параметры);
	Если ТипПараметра = Тип("Массив") Или ТипПараметра = Тип("ФиксированныйМассив") Тогда
		Лог.Отладка("		Кол-во параметров при создании %2", Параметры.Количество());
	Иначе
		Лог.Отладка("		Параметр при создании %2", Параметры);
	КонецЕсли;
КонецПроцедуры

// Выполняет Делегат, т.е. вызываем соответствующий метод объекта с заданными параметрами
//
// Параметры:
//   НовыеПараметры - Произвольный, Массив, ФиксированныйМассив - (необязательный) Параметры для передачи в вызываемый метод
//		Если передан Массив/ФиксированныйМассив, тогда все элементы массива передаются как отдельные параметры вызываемого метода
//		Рекомендуется использовать создание массива параметров через Делегаты.МассивПараметров при использовании нескольких параметров
//		Если Неопределено, тогда используются параметры, указанные при создании Делегата
//
//  Возвращаемое значение:
//   Произвольный - возвращаемое значение вызываемого метода, если тот является функцией,
//		или Неопределено, если метод является процедурой
//
Функция Исполнить(НовыеПараметры = Неопределено) Экспорт

	ПараметрыВыполнения = Новый Массив;
	Если НовыеПараметры <> Неопределено Тогда
		ПараметрыВыполнения = МассивПараметров(НовыеПараметры);
	ИначеЕсли Параметры <> Неопределено Тогда
		ПараметрыВыполнения = МассивПараметров(Параметры);
	КонецЕсли;

	Рефлектор = Новый Рефлектор;
	
	Лог.Отладка("Делегат.Исполнить %1", ИмяМетода);
	Лог.Отладка("Делегат.Исполнить. Имя метода %1, Тип объекта %2", ИмяМетода, ТипЗнч(Объект));
	Лог.Отладка("Делегат.Исполнить Кол-во параметров %2", ПараметрыВыполнения.Количество());

	Результат = Рефлектор.ВызватьМетод(Объект, ИмяМетода, ПараметрыВыполнения);

	Возврат Результат;

КонецФункции

// Программный объект, метод которого будет вызван
//
//  Возвращаемое значение:
//   Произвольный - Программный объект, метод которого будет вызван
//
Функция Объект() Экспорт
	Возврат Объект;
КонецФункции

// Имя метода (процедура/функция), который будет вызван
//
//  Возвращаемое значение:
//   Строка - Имя метода (процедура/функция), который будет вызван
//
Функция ИмяМетода() Экспорт
	Возврат ИмяМетода;
КонецФункции

// Параметры для передачи в метод при его вызове
//
//  Возвращаемое значение:
//   Произвольный, Массив, ФиксированныйМассив - Параметры для передачи в метод при его вызове
//
Функция Параметры() Экспорт
	Возврат Параметры;	
КонецФункции

// Установить параметры для передачи в метод при его вызове
//
// Параметры:
//   НовыеПараметры - Произвольный, Массив, ФиксированныйМассив - Параметры для передачи в метод при его вызове
//
Процедура УстановитьПараметры(НовыеПараметры) Экспорт
	Параметры = НовыеПараметры;
КонецПроцедуры

Функция МассивПараметров(Параметры)
	ПараметрыВыполнения = Новый Массив;
	Если Параметры <> Неопределено Тогда
		ТипПараметра = ТипЗнч(Параметры);
		Если ТипПараметра = Тип("Массив") Или ТипПараметра = Тип("ФиксированныйМассив") Тогда
			ПараметрыВыполнения = Параметры;
		Иначе	
			ПараметрыВыполнения.Добавить(Параметры);		
		КонецЕсли;
	КонецЕсли;
	Возврат ПараметрыВыполнения;
КонецФункции
